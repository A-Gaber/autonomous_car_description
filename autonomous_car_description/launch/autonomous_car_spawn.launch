<launch>
    <arg name="robot_name" default="autonomous_car"/>
    <arg name="robot_model" default="$(find autonomous_car_description)/urdf/autonomous_car.xacro"/>
    
    <env name="GAZEBO_PLUGIN_PATH" value="$(find autonomous_car_description)/../../devel/lib/"/>

    <!-- send the robot XML to param server -->
    <param name="robot_description" command="$(find xacro)/xacro.py '$(arg robot_model)'"/>

    <!-- Initial pose for the drone -->
    <arg name="x" default="0.0"/> <!-- [m], positive to the North -->
    <arg name="y" default="0.0"/> <!-- [m], negative to the East -->
    <arg name="z" default="0.5"/> <!-- [m], positive Up -->
    <arg name="roll" default="0"/> <!-- [rad] -->
    <arg name="pitch" default="0"/> <!-- [rad] -->
    <arg name="yaw" default="0"/> <!-- [rad], negative clockwise -->

    <!-- push robot_description to factory and spawn robot in gazebo -->
    <node name="autonomous_car_spawn" pkg="gazebo_ros" type="spawn_model"
        args="-param robot_description
        -urdf
        -x $(arg x)
        -y $(arg y)
        -z $(arg z)
        -R $(arg roll)
        -P $(arg pitch)
        -Y $(arg yaw)
        -model $(arg robot_name)"
        respawn="false" output="screen">
    </node>

    <rosparam file="$(find autonomous_car_description)/config/controllers.yaml" command="load"/>
    <node name="controller_manager" pkg="controller_manager" type="spawner" respawn="false"
    output="screen" ns="/autonomous_car" args="front_right_wheel_velocity_controller front_left_wheel_velocity_controller
                                        rear_left_wheel_velocity_controller rear_right_wheel_velocity_controller
                                        front_right_hinge_position_controller front_left_hinge_position_controller
                                        joint_state_controller"/>

    <!-- calculate and publish the tf's for each joint based on the urdf file within robot_description -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="false" output="screen">
        <param name="publish_frequency" type="double" value="50.0" />
        <remap from="/joint_states" to="/autonomous_car/joint_states" />
    </node>

</launch>
